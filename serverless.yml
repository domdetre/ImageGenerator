service: ImageGenerator

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::images-dfd/*
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:eu-west-1:*:table/ImageList*

  environment:
    DYNAMODB_TABLE: ImageList-${self:provider.stage}
    S3_BUCKET_IMAGES: images-dfd

layers:
  Source:
    path: lambda/layer
    package:
      include:
        - 'nodejs/node_modules/**'

package:
  include:
    - 'lambda/source/*'
  exclude:
    - '**/*'

functions:
  ImageGenerator:
    handler: lambda/source/handlers.imageGenerator
    layers:
      - { Ref: SourceLambdaLayer }
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ImageGeneratorQueue, Arn]
          batchSize: 1

  ImageDeleter:
    handler: lambda/source/handlers.imageDeleter
    layers:
      - { Ref: SourceLambdaLayer }
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ImageDeleterQueue, Arn]
          batchSize: 1

resources:
  Resources:
    ImageGeneratorRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /

    ImageGeneratorPolicy: 
      Type: "AWS::IAM::Policy"
      Properties: 
        PolicyName: generator
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource: arn:aws:dynamodb:eu-west-1:*:table/ImageList*
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: 
                - arn:aws:sqs:*:*:ImageGenerator*
                - arn:aws:sqs:*:*:ImageDeleter*
        Roles: 
          - 
            Ref: ImageGeneratorRole

    ImageGeneratorInstanceProfile: 
      Type: "AWS::IAM::InstanceProfile"
      Properties: 
        Path: "/"
        Roles: 
          - 
            Ref: ImageGeneratorRole

    ImageGeneratorQueue:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: ImageGenerator-${self:provider.stage}

    ImageDeleterQueue:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: ImageDeleter-${self:provider.stage}
    
    ImageGeneratorApplication:
      Type: AWS::ElasticBeanstalk::Application
      Properties:
        ApplicationName: ImageGeneratorApplication-${self:provider.stage}
        Description: ImageGenerator Application

    ImageGeneratorApplicationVersion:
      DependsOn:
        - ImageGeneratorApplication
      Type: AWS::ElasticBeanstalk::ApplicationVersion
      Properties: 
        ApplicationName:
          Ref: ImageGeneratorApplication
        SourceBundle: 
          S3Bucket: ${opt:S3Bucket}
          S3Key: ${opt:S3ApplicationVersionKey}
    
    ImageGeneratorEnvironment:
      DependsOn:
        - ImageGeneratorQueue
        - ImageGeneratorApplication
      Type: AWS::ElasticBeanstalk::Environment
      Properties:
        ApplicationName:
          Ref: ImageGeneratorApplication
        EnvironmentName: ImageGeneratorEnvironment-${self:provider.stage}
        Description: ImageGenerator Environment
        SolutionStackName: 64bit Amazon Linux 2 v3.1.1 running PHP 7.3
        VersionLabel: 
          Ref: ImageGeneratorApplicationVersion
        OptionSettings:
          - Namespace: aws:autoscaling:asg
            OptionName: MinSize
            Value: 1
          - Namespace: aws:autoscaling:asg
            OptionName: MaxSize
            Value: 3
          - Namespace: aws:autoscaling:launchconfiguration
            OptionName: InstanceType
            Value: t2.small
          - Namespace: aws:autoscaling:launchconfiguration
            OptionName: EC2KeyName
            Value: ${env:EC2_KEYNAME}
          - Namespace: aws:autoscaling:launchconfiguration
            OptionName: IamInstanceProfile
            Value:
              Ref: ImageGeneratorInstanceProfile
          - Namespace: aws:elasticbeanstalk:container:php:phpini
            OptionName: document_root
            Value: /public
          - Namespace: aws:elasticbeanstalk:application:environment
            OptionName: SQS_GENERATOR_URL
            Value:
              Ref: ImageGeneratorQueue
          - Namespace: aws:elasticbeanstalk:application:environment
            OptionName: SQS_DELETER_URL
            Value:
              Ref: ImageDeleterQueue
          - Namespace: aws:elasticbeanstalk:application:environment
            OptionName: MEMCACHED_ADDRESS
            Value:
              Fn::Join:
                - '://'
                - - 'memcached'
                  - 
                    Fn::GetAtt: [ImageGeneratorCache, ConfigurationEndpoint.Address]
          - Namespace: aws:elasticbeanstalk:application:environment
            OptionName: MEMCACHED_TTL_SECONDS
            Value: 30
          - Namespace: aws:elasticbeanstalk:application:environment
            OptionName: DYNAMODB_TABLE
            Value: ImageList-${self:provider.stage}

    ImageGeneratorSecurityGroup:
      Type: AWS::ElastiCache::SecurityGroup
      Properties: 
        Description: ImageGenerator SecurityGroup
    
    ImageGeneratorCache:
      DependsOn:
        - ImageGeneratorSecurityGroup
      Type: AWS::ElastiCache::CacheCluster
      Properties: 
        CacheNodeType: cache.t2.small
        ClusterName: ImageGeneratorCache-${self:provider.stage}
        Engine: memcached
        CacheSecurityGroupNames:
          - Ref: ImageGeneratorSecurityGroup
        NumCacheNodes: 3

    ImageGeneratorDatabase:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ImageList-${self:provider.stage}
        AttributeDefinitions: 
          - AttributeName: filename
            AttributeType: S
        KeySchema: 
          - AttributeName: filename
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST 